# Generated by Django 3.2.15 on 2022-09-05 20:21

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('vendor', models.CharField(blank=True, max_length=128)),
                ('method', models.SmallIntegerField(blank=True, choices=[(1, 'Credit Card'), (2, 'Purchase Order')], null=True)),
                ('reference', models.CharField(blank=True, max_length=128)),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=8)),
            ],
            options={
                'ordering': ['text'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=128, unique=True)),
            ],
            options={
                'ordering': ['text'],
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=200)),
                ('file', models.FileField(blank=True, null=True, upload_to='videos/%Y/%m/')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='videos/%Y/%m/')),
                ('contributor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Picture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=200)),
                ('file', models.ImageField(upload_to='pictures/%Y/%m/')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('contributor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first', models.CharField(max_length=128)),
                ('last', models.CharField(max_length=128)),
                ('phone', models.CharField(blank=True, max_length=10, validators=[django.core.validators.RegexValidator(message='Phone number must be either 4 or 10 digits', regex='^(\\d{4}|\\d{10})$')])),
                ('email', models.EmailField(blank=True, max_length=128)),
                ('departments', models.ManyToManyField(related_name='people', to='core.Department')),
                ('office', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.room')),
            ],
            options={
                'ordering': ['last'],
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(max_length=4096)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('contributor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('file', models.FileField(upload_to='documents/%Y/%m/')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('contributor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(max_length=16, unique=True, validators=[django.core.validators.RegexValidator(message='Asset Tag is not in the correct format', regex='^(M/C X\\d\\d\\d\\d|OE-\\d\\d\\d\\d)$')])),
                ('nickname', models.CharField(blank=True, max_length=128)),
                ('description', models.TextField(blank=True, max_length=1024)),
                ('model', models.CharField(blank=True, max_length=128)),
                ('serial', models.CharField(blank=True, max_length=128)),
                ('location', models.CharField(blank=True, max_length=64)),
                ('inventoried', models.DateField(blank=True, null=True)),
                ('status', models.SmallIntegerField(blank=True, choices=[(1, 'In Service'), (2, 'Discarded'), (3, 'Gifted'), (4, 'Parts Only'), (5, 'Faculty Left'), (6, 'Returned'), (7, 'Lost'), (8, 'Missing')], null=True)),
                ('contacts', models.ManyToManyField(related_name='assets', to='core.Person')),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.department')),
                ('documents', models.ManyToManyField(related_name='assets', to='core.Document')),
                ('manufacturer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.manufacturer')),
                ('notes', models.ManyToManyField(related_name='assets', to='core.Note')),
                ('pictures', models.ManyToManyField(related_name='assets', to='core.Picture')),
                ('purchases', models.ManyToManyField(related_name='assets', to='core.Purchase')),
                ('room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.room')),
                ('tags', models.ManyToManyField(related_name='assets', to='core.Tag')),
                ('videos', models.ManyToManyField(related_name='assets', to='core.Video')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.AddConstraint(
            model_name='person',
            constraint=models.UniqueConstraint(fields=('first', 'last'), name='unique full name'),
        ),
    ]
